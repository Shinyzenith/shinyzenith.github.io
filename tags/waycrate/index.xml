<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Waycrate on Shinyzenith</title>
    <link>https://aakash.is-a.dev/tags/waycrate/</link>
    <description>Recent content in Waycrate on Shinyzenith</description>
    <image>
      <url>https://aakash.is-a.dev/</url>
      <link>https://aakash.is-a.dev/</link>
    </image>
    
    <language>en</language>
    <lastBuildDate>Tue, 08 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aakash.is-a.dev/tags/waycrate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UNIX domain socket IPC in Rust.</title>
      <link>https://aakash.is-a.dev/blogs/unix_ipc_rust/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aakash.is-a.dev/blogs/unix_ipc_rust/</guid>
      <description>The IPC patch is complete and has been merged into the main branch.
The patch was made possible with the interprocess crate and was later rewritten to raw stdlib implementation in this commit. Currently the server binary (swhks) makes a socket at /run/user/(YourUserID)/swhkd.sock which then the daemon binary (swhkd) tries to establish a connection with.
After merging the initial set of patches Ckyiu found 2 issues right away:
Calling the function physical_path() on any evdev::Device object returns None on virtual machines and hence the binary panics and crashes while attempting to execute .</description>
    </item>
    
    <item>
      <title>Rewriting swhkd in rust!</title>
      <link>https://aakash.is-a.dev/blogs/swhkd_rust_rewrite/</link>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aakash.is-a.dev/blogs/swhkd_rust_rewrite/</guid>
      <description>Hi all! It&amp;rsquo;s high time I put this domain purchase to use and uploaded my first blog.
I started a project called swhkd a few weeks back which stands for the Simple Wayland HotKey Daemon.
Swhkd is a drop in replacement for the popular X11 utility sxhkd, which is a hotkey daemon. Don&amp;rsquo;t let the name fool you, swhkd is compatible with X11, WayLand, and TTY.
Initially I wrote a python prototype which worked well for a concept but was a memory hog, consuming upto 19Mb for just printing the device key events.</description>
    </item>
    
  </channel>
</rss>
